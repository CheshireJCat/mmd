import { P as D, S as z, C as H, a as O, M as R, b as N, A as T, c as j, D as q, W as G, d as K, e as V, f as Y, g as $, h as J, i as Q } from "./vendor.ac2633d6.js"; const U = function () { const s = document.createElement("link").relList; if (s && s.supports && s.supports("modulepreload")) return; for (const e of document.querySelectorAll('link[rel="modulepreload"]')) m(e); new MutationObserver(e => { for (const n of e) if (n.type === "childList") for (const u of n.addedNodes) u.tagName === "LINK" && u.rel === "modulepreload" && m(u) }).observe(document, { childList: !0, subtree: !0 }); function c(e) { const n = {}; return e.integrity && (n.integrity = e.integrity), e.referrerpolicy && (n.referrerPolicy = e.referrerpolicy), e.crossorigin === "use-credentials" ? n.credentials = "include" : e.crossorigin === "anonymous" ? n.credentials = "omit" : n.credentials = "same-origin", n } function m(e) { if (e.ep) return; e.ep = !0; const n = c(e); fetch(e.href, n) } }; U(); let h, a, d, l, f, y = !1, P = !1; const X = new Q; let L = document.getElementById("status"), v = { self: document.getElementById("progress"), progress_model: document.getElementById("progress_model"), progress_animation: document.getElementById("progress_animation"), progress_camera: document.getElementById("progress_camera"), progress_music: document.getElementById("progress_music"), changeProgress(r, s) { this.show(), this[`progress_${r}`].innerText = s }, hide() { this.self.classList.add("hide") }, show() { this.self.classList.contains("hide") && this.self.classList.remove("hide") } }; function g(r) { return function (c) { if (c.lengthComputable) { const m = Math.floor(c.loaded / c.total * 100); v.changeProgress(r, m) } } } function M(r) { L.innerText = r || "" } function Z() { ee(() => { M("\u5373\u5C06\u5F00\u59CB..."), y = !0, b(), M(), v.hide() }) } L.addEventListener("click", function () { !y && !P && (P = !0, M("\u8D44\u6E90\u52A0\u8F7D\u4E2D..."), Ammo().then(Z)) }); function ee(r) { const s = document.getElementById("container"); a = new D(30, window.innerWidth / window.innerHeight, 1, 1500), d = new z, d.background = new H(12058083); const c = new O(40, 42, 1, 30, 30), m = new R({ color: 15844579 }); h = new N(c, m), h.translateY(-1), d.add(h); const e = new T; a.add(e), d.add(a); const n = new j(7829367); d.add(n); const u = new q(8943462); u.position.set(0, 0, 10).normalize(), d.add(u), l = new G({ antialias: !0 }), l.setPixelRatio(window.devicePixelRatio), l.setSize(window.innerWidth, window.innerHeight), l.shadowMap.enabled = !0, l.shadowMap.type = K, s.appendChild(l.domElement); const A = ["./models/vmd/snow.vmd"], C = "./models/audio/snow.mp3", E = ["./models/vmd/camera.vmd"], B = "./models/role/miku/1.pmd", _ = { delayTime: 0 }; f = new V; const w = new Y, I = w.animationBuilder; Promise.all([S(B), x(A), F(E), W(C)]).then(([t, o, i, p]) => { let k = I.build(o, t); f.add(t, { animation: k, physics: !0 }), f.add(a, { animation: i }), f.add(p, _), d.add(t), r() }); function S(t) { return new Promise(o => { w.load(t, function (i) { o(i) }, g("model"), null) }) } function x(t) { return new Promise(o => { w.loadVMD(t, function (i) { o(i) }, g("animation"), null) }) } function F(t) { return new Promise(o => { w.loadAnimation(t, a, function (i) { o(i) }, g("camera"), null) }) } function W(t) { return new Promise(o => { new $().load(t, function (i) { const p = new J(e).setBuffer(i); o(p) }, g("music"), null) }) } window.addEventListener("resize", ne) } function ne() { a.aspect = window.innerWidth / window.innerHeight, a.updateProjectionMatrix(), l.setSize(window.innerWidth, window.innerHeight) } function b() { requestAnimationFrame(b), te() } function te() { y && f.update(X.getDelta()), l.render(d, a) }
